$componentPadding: $base-value-quarter;
$iconSize: 1.25rem;
$iconOffset: 0.25rem;
$iconStroke: 15px;

.checkbox-svg {
  position: relative;
  display: inline-block;
  padding: $componentPadding;
  border-radius: $radius-base;
  transition: background-color 0.25s;

  &:focus-within {
    @extend .control-border-style-active;
  }

  &:hover {
    background-color: rgba($primary-color, .25);
  }

  label {
    @extend .control-label;
    display: block;
    position: relative;
    top: 0;
    left: 0;
    min-height: 100%;
    padding: 0 0 0 $iconSize * 1.25;
  }

  input[type="checkbox"]{
    display: inline-block;
    vertical-align: middle;
    opacity: 0;
  }

  input[type="checkbox"],
  label::before{
    width: $iconSize;
    height: $iconSize;
    position: absolute;
    left: 0;
    //top: 0;
    top: 50%;
    transform: translateY(-50%);
  }

  label::before {
    content: '';
    border: 2px solid currentColor;
    border-radius: $radius-base;
    background-color: transparent;
    transition: background-color 0.1s;
  }

  input[type="checkbox"]:checked + label::before {
    background-color: currentColor;
  }

  svg {
    position: absolute;
    display: block;
    top: $iconOffset + $componentPadding;
    left: $iconOffset + $componentPadding;
    width: $iconSize - ($iconOffset*2);
    height: $iconSize - ($iconOffset*2);
    margin-top: 0;
    pointer-events: none;

    path {
      fill: none;
      stroke: white;
      stroke-width: $iconStroke;
      stroke-linecap: round;
      transition: all 0.25s ease-out;
      transition-timing-function: cubic-bezier(0.42, 0, 0.58, 1); // ease in/out
      & + path {
        transition: stroke-dashoffset 0.2s ease-out 0.2s;
      }
    }

  }

  input[type="checkbox"]:checked ~ svg path{
    stroke-dashoffset: 0;
  }

  &.checked {

  }
}